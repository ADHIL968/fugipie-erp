<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invoice | Client</title>
    <link rel="shortcut icon" href="/image/logo.png" type="image/x-icon">
    <link rel="stylesheet" href="/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/datatable/datatable.css">
    <link rel="stylesheet" href="/css/all.css">
    <link rel="stylesheet" href="/css/client.css">
    <script src="https://unpkg.com/pdf-lib@1.4.0"></script>
    <script src="https://unpkg.com/downloadjs@1.4.7"></script>
</head>

<body>

    <div class="content">
        <div class="container-xxl">
            <div class="mt-4 w-100 d-flex justify-content-between align-items-center">
                <a href="/" class="modal-open-button py-2 px-5">Go back</a>
                <a href="/logout" class="delete-anchor py-2 px-5">Logout</a>
            </div>
            <div class="w-100 mt-4 d-flex justify-content-center align-items-center">
                <button class="view-profile-anchor p-3" onclick="downloadInvoice()">Download Invoice</button>
            </div>
            <iframe id="pdfViewer" class="mt-4" style="width: 100%; height: 842px;"></iframe>
        </div>
    </div>

    <script src="/js/script.js"></script>
    <script src="/bootstrap/js/bootstrap.min.js"></script>
    <script>
        var invoice = <%-JSON.stringify(invoice)%>
        var pdfBytes
        var file
        var startingY = 580
        var startingX = 170
        async function generatePdf() {
            try {
                const {
                    PDFDocument,
                    rgb
                } = PDFLib;
                const exBytes = await fetch('/pdf/invoice.pdf').then((res) => {
                    return res.arrayBuffer()
                })
                const generated = await PDFDocument.load(exBytes)
                const pages = generated.getPages()
                const firstPage = pages[0]

                await firstPage.drawText(`${invoice.client.name.toUpperCase()}`, {
                    x: 130,
                    y: 701,
                    size: 14,
                    color: rgb(0.1, 0.1, 0.1),
                })
                await firstPage.drawText(`${invoice.id}`, {
                    x: 445,
                    y: 701,
                    size: 14,
                    color: rgb(0.1, 0.1, 0.1),
                })
                await firstPage.drawText(`${invoice.date}`, {
                    x: 462,
                    y: 678,
                    size: 14,
                    color: rgb(0.1, 0.1, 0.1),
                })
                await firstPage.drawText(`${invoice.amount}`, {
                    x: 485,
                    y: 366,
                    size: 14,
                    color: rgb(0.1, 0.1, 0.1),
                })

                for (i of invoice.data) {
                    await firstPage.drawText(`${i.text}`, {
                        x: 170,
                        y: startingY,
                        size: 14,
                        color: rgb(0.1, 0.1, 0.1),
                    })

                    await firstPage.drawText(`${i.amount}`, {
                        x: 460,
                        y: startingY,
                        size: 14,
                        color: rgb(0.1, 0.1, 0.1),
                    })

                    startingY = startingY - 30
                }

                pdfBytes = await generated.save()
                return true
            } catch (e) {
                console.log(e)
                alert('Some error occured . try again later')
                return false
            }
        }
        async function startPage() {
            let x = await generatePdf()
            if (x) {
                const blob = new Blob([pdfBytes], {
                    type: 'application/pdf'
                });
                const url = URL.createObjectURL(blob);
                document.getElementById('pdfViewer').src = url;
                file = new File([blob], 'invoice.pdf', {
                    type: 'application/pdf',
                });
            }
        }

        function downloadInvoice() {
            download(pdfBytes, `${invoice.id}.pdf`, "application/pdf");
        }
        startPage()
    </script>
</body>

</html>